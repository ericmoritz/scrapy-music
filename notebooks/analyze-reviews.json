{"paragraphs":[{"text":"val minDate = z.input(\"minDate\", \"2016-09-01\")","dateUpdated":"2016-09-27T17:50:22+0000","config":{"colWidth":12,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true,"editorMode":"ace/mode/scala"},"settings":{"params":{"date":"2016-09-01","minDate":"2016-09-01","maxDate":"2016-10-01"},"forms":{"minDate":{"name":"minDate","displayName":"minDate","type":"input","defaultValue":"2016-09-01","hidden":false}}},"jobName":"paragraph_1474996933641_1457305752","id":"20160927-172213_298808321","result":{"code":"SUCCESS","type":"TEXT","msg":"minDate: Object = 2016-09-01\n"},"dateCreated":"2016-09-27T17:22:13+0000","dateStarted":"2016-09-27T17:50:22+0000","dateFinished":"2016-09-27T17:50:22+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:2198"},{"text":"\nval objects = sqlContext.read.json(\n \"s3://eam-scrapes/pitchfork/v=1/*/data.jsonlines\"\n)\nobjects.distinct.registerTempTable(\"objects\")\nobjects.printSchema()","dateUpdated":"2016-09-27T17:50:26+0000","config":{"colWidth":12,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true,"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1474998266057_-2141538581","id":"20160927-174426_1564141992","result":{"code":"SUCCESS","type":"TEXT","msg":"warning: there was one deprecation warning; re-run with -deprecation for details\nroot\n |-- @context: struct (nullable = true)\n |    |-- @vocab: string (nullable = true)\n |    |-- Resource: string (nullable = true)\n |    |-- type: string (nullable = true)\n |    |-- uri: string (nullable = true)\n |-- author: array (nullable = true)\n |    |-- element: struct (containsNull = true)\n |    |    |-- @id: string (nullable = true)\n |-- bestRating: long (nullable = true)\n |-- byArtist: array (nullable = true)\n |    |-- element: struct (containsNull = true)\n |    |    |-- @id: string (nullable = true)\n |-- datePublished: string (nullable = true)\n |-- itemReviewed: struct (nullable = true)\n |    |-- @id: string (nullable = true)\n |-- name: string (nullable = true)\n |-- publisher: struct (nullable = true)\n |    |-- @id: string (nullable = true)\n |-- ratingValue: long (nullable = true)\n |-- recordLabel: array (nullable = true)\n |    |-- element: struct (containsNull = true)\n |    |    |-- @id: string (nullable = true)\n |-- releaseOf: struct (nullable = true)\n |    |-- @id: string (nullable = true)\n |-- reviewRating: struct (nullable = true)\n |    |-- @id: string (nullable = true)\n |-- type: array (nullable = true)\n |    |-- element: string (containsNull = true)\n |-- uri: string (nullable = true)\n |-- url: string (nullable = true)\n |-- worstRating: long (nullable = true)\n\nobjects: org.apache.spark.sql.DataFrame = [@context: struct<@vocab: string, Resource: string ... 2 more fields>, author: array<struct<@id:string>> ... 14 more fields]\n"},"dateCreated":"2016-09-27T17:44:26+0000","dateStarted":"2016-09-27T17:50:26+0000","dateFinished":"2016-09-27T17:51:03+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:2199"},{"text":"\n\nimport java.net.URLEncoder;\n\n\nval link = udf(\n    (href: String, text: String) => s\"\"\"%html <a href=\"$href\" target=\"_blank\">$text</a>\"\"\"\n)\n\nval searchURL = udf(\n  (x: String) => s\"spotify://search:${URLEncoder.encode(x)}\" \n)\nval fullReleaseName = udf(\n  (artistName: String, albumName: String) => s\"$artistName - $albumName\"\n)\nval sql = s\"\"\"\nSELECT DISTINCT\n    review.uri as review_uri,\n    release.uri as release_uri,\n    album.uri as album_uri,\n    rating.uri as rating_uri,\n    review.url,\n    review.datePublished,\n    review.author,\n    release.datePublished as releaseDatePublished,\n    rating.ratingValue,\n    album.name as albumName,\n    artist.name as artistName\n    FROM\n      objects as review,\n      objects as release,\n      objects as artist,\n      objects as rating,\n      objects as album\n      LATERAL VIEW explode(album.byArtist) a2a AS artist\n\n    WHERE \n      review.itemReviewed['@id'] = release.uri\n    AND \n      release.releaseOf['@id'] = album.uri\n    AND\n      a2a.artist['@id'] = artist.uri\n    AND\n      review.reviewRating['@id'] = rating.uri\n    AND\n      review.datePublished >= '$minDate'\n    AND \n      rating.ratingValue >= 650\n    AND \n      release.datePublished >= 2016\n\"\"\"\n\nprintln(s\"SQL: $sql\")\n\nval reviews = sqlContext.sql(sql).select(\n    fullReleaseName($\"artistName\", $\"albumName\").as(\"fullAlbumName\"),\n    link($\"url\", fullReleaseName($\"artistName\", $\"albumName\")).as(\"a_tag\"),\n    link(searchURL(fullReleaseName($\"artistName\", $\"albumName\")), lit(\"search\")).as(\"search_a_tag\"),\n    $\"*\"\n)\nreviews.write.json(s\"s3://eam-scrapes/music/top/minDate=$minDate\")","dateUpdated":"2016-09-27T17:51:05+0000","config":{"tableHide":false,"colWidth":12,"editorMode":"ace/mode/scala","editorHide":false,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true},"settings":{"params":{"date":"2016-09-01"},"forms":{}},"jobName":"paragraph_1474995359874_895147690","id":"20160803-152227_844802163","result":{"code":"SUCCESS","type":"TEXT","msg":"import java.net.URLEncoder\nlink: org.apache.spark.sql.expressions.UserDefinedFunction = UserDefinedFunction(<function2>,StringType,Some(List(StringType, StringType)))\nwarning: there was one deprecation warning; re-run with -deprecation for details\nsearchURL: org.apache.spark.sql.expressions.UserDefinedFunction = UserDefinedFunction(<function1>,StringType,Some(List(StringType)))\nfullReleaseName: org.apache.spark.sql.expressions.UserDefinedFunction = UserDefinedFunction(<function2>,StringType,Some(List(StringType, StringType)))\nsql: String =\n\"\nSELECT DISTINCT\n    review.uri as review_uri,\n    release.uri as release_uri,\n    album.uri as album_uri,\n    rating.uri as rating_uri,\n    review.url,\n    review.datePublished,\n    review.author,\n    release.datePublished as releaseDatePublished,\n    rating.ratingValue,\n    album.name as albumName,\n    artist.name as artistName\n    FROM\n      objects as review,\n      objects as release,\n      objects as artist,\n      objects as rating,\n      objects as album\n      LATERAL VIEW explode(album.byArtist) a2a AS artist\n\n    WHERE\n      review.itemReviewed['@id'] = release.uri\n    AND\n      release.releaseOf['@id'] = album.uri\n    AND\n      a2a.artist['@id'] = artist.uri\n    AND\n      review.reviewRating['@id'] = rating.uri\n    AND\n      review.datePublished >= '2016-09-01'\n ...SQL: \nSELECT DISTINCT\n    review.uri as review_uri,\n    release.uri as release_uri,\n    album.uri as album_uri,\n    rating.uri as rating_uri,\n    review.url,\n    review.datePublished,\n    review.author,\n    release.datePublished as releaseDatePublished,\n    rating.ratingValue,\n    album.name as albumName,\n    artist.name as artistName\n    FROM\n      objects as review,\n      objects as release,\n      objects as artist,\n      objects as rating,\n      objects as album\n      LATERAL VIEW explode(album.byArtist) a2a AS artist\n\n    WHERE \n      review.itemReviewed['@id'] = release.uri\n    AND \n      release.releaseOf['@id'] = album.uri\n    AND\n      a2a.artist['@id'] = artist.uri\n    AND\n      review.reviewRating['@id'] = rating.uri\n    AND\n      review.datePublished >= '2016-09-01'\n    AND \n      rating.ratingValue >= 650\n    AND \n      release.datePublished >= 2016\n\nreviews: org.apache.spark.sql.DataFrame = [fullAlbumName: string, a_tag: string ... 12 more fields]\n"},"dateCreated":"2016-09-27T16:55:59+0000","dateStarted":"2016-09-27T17:51:05+0000","dateFinished":"2016-09-27T17:52:56+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:2200"},{"dateUpdated":"2016-09-27T17:04:46+0000","config":{"colWidth":12,"editorMode":"ace/mode/scala","graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1474995359888_900534175","id":"20160831-185014_1334123097","result":{"code":"SUCCESS","type":"TEXT","msg":""},"dateCreated":"2016-09-27T16:55:59+0000","dateStarted":"2016-09-27T17:05:16+0000","dateFinished":"2016-09-27T17:05:16+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:2201"}],"name":"analyze-reviews","id":"2BVX9HHCC","angularObjects":{"2BRWU4WXC:shared_process":[],"2AM1YV5CU:shared_process":[],"2AJXGMUUJ:shared_process":[],"2ANGGHHMQ:shared_process":[],"2AKK3QQXU:shared_process":[]},"config":{"looknfeel":"default"},"info":{}}